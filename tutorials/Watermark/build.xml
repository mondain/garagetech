<?xml version="1.0" ?>
<project name="recorder" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

    <!-- // Basedir property -->
    <property name="base.dir" value="."/>
    <!-- // Give user a chance to override without editing this file or typing '-D'. -->
    <property file="${base.dir}/build.properties"/>

    <!-- // Set the global properties for this project. -->
    <property name="project.name" value="${project.publish.name}"/>
    <property name="src.java.dir" value="${base.dir}/src/java"/>
    <property name="src.test.dir" value="${base.dir}/src/test"/>
    <property name="war.dir" value="${base.dir}/web"/>
    <property name="ext.dir" value="${base.dir}/ext"/>
    <property name="lib.dir" value="${war.dir}/WEB-INF/lib"/>
    <property name="resources.dir" value="${base.dir}/src/resources"/>
    <property name="test.dir" value="${base.dir}/test-build"/>
    <property name="dest.dir" value="${war.dir}/WEB-INF/classes"/>
    <property name="javac.debug" value="true"/>
    <property name="javac.deprecation" value="false"/>
    <property name="debug" value="false"/>

    <!-- // Compile classpath -->
    <path id="build.classpath">
        <fileset dir="${ext.dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${dest.dir}"/>
    </path>

    <!-- // Ivy related targets -->
    <target name="retrieve" description="Retrieves the libraries if needed.">
        <mkdir dir="${ext.dir}"/>
        <mkdir dir="${lib.dir}"/>
        <ivy:settings file="${base.dir}/ivysettings.xml"/>
        <condition property="ivy.conf.name" value="default">
            <not>
                <isset property="ivy.conf.name"/>
            </not>
        </condition>
        <echo message="Ivy conf name: ${ivy.conf.name}"/>
        <ivy:resolve file="${base.dir}/ivy.xml" conf="${ivy.conf.name}"/>
        <ivy:retrieve conf="${ivy.conf.name}"
                      pattern="${lib.dir}/[artifact](-[revision]).[ext]"/>
        <ivy:retrieve conf="compile"
                      pattern="${ext.dir}/[artifact](-[revision]).[ext]"/>
    </target>

    <target name="ivyclear" description="Clears out the ivy cache.">
        <!--ivy:cleancache/-->
        <delete includeemptydirs="true">
            <fileset dir="${ext.dir}" excludes="**/ivy*.jar"/>
            <fileset dir="${lib.dir}" excludes="**/ivy*.jar"/>
        </delete>
    </target>

    <target name="init" depends="retrieve" description="Initialize the build">
        <tstamp/>
        <mkdir dir="${dest.dir}"/>
    </target>

    <target name="compile" depends="init"
            description="Compile the Java source code">
        <javac classpathref="build.classpath"
               destdir="${dest.dir}"
               debug="${javac.debug}"
               deprecation="${javac.deprecation}"
               nowarn="on">
            <src path="${src.java.dir}"/>
        </javac>
        <copy todir="${dest.dir}">
            <fileset dir="${resources.dir}">
                <include name="*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="clean" description="Cleans up the build directory">
        <delete includeemptydirs="true" dir="${dest.dir}"/>
    </target>

</project>
